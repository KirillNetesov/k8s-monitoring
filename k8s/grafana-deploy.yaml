apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
  labels:
    grafana_datasource: "1"
data:
  prometheus-datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.monitoring.svc.cluster.local:9090
        isDefault: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        updateIntervalSeconds: 30
        options:
          path: /etc/grafana/provisioning/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-definitions
  namespace: monitoring
data:
  node-exporter.json: |
    {
      "title": "Node Exporter Full",
      "uid": "node-exporter",
      "schemaVersion": 36,
      "version": 1,
      "panels": [
        {
          "title": "CPU Usage",
          "type": "graph",
          "targets": [
            { "expr": "rate(node_cpu_seconds_total{mode!='idle'}[5m])" }
          ]
        }
      ]
    }
  nginx.json: |
    {
      "title": "NGINX Metrics",
      "uid": "nginx",
      "schemaVersion": 36,
      "version": 1,
      "panels": [
        {
          "title": "Requests",
          "type": "graph",
          "targets": [
            { "expr": "rate(nginx_http_requests_total[5m])" }
          ]
        }
      ]
    }
  kubernetes.json: |
    {
      "title": "Kubernetes Cluster",
      "uid": "kubernetes",
      "schemaVersion": 36,
      "version": 1,
      "panels": [
        {
          "title": "Pod count",
          "type": "stat",
          "targets": [
            { "expr": "count(kube_pod_info)" }
          ]
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.0.0
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-credentials
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-credentials
                  key: admin-password
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboard-definitions
              mountPath: /etc/grafana/provisioning/dashboards/json
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-dashboard-definitions
          configMap:
            name: grafana-dashboard-definitions
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30300
  selector:
    app: grafana
